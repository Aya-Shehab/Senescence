<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
    />

    <title>Senescence Bakery - Checkout</title>

    <%- include("partials/links.ejs")%>
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="/css/checkout.css">
  </head>

  <body>
    <%- include("partials/navbar.ejs")%>
    <main>
      <section class="checkout-section">
        <div class="auto-container">
          <div class="row">
            <div class="col-lg-8 col-md-12 col-sm-12">
              <div class="checkout-form">
                <div class="billing-info">
                  <h4 class="sub-title">Billing Details</h4>
                  <form
                    action="#"
                    method="post"
                    class="billing-form"
                    id="checkout-form"
                  >
                    <div class="row">
                      <div class="col-lg-6 col-md-6 col-sm-12 form-group">
                        <label>First Name*</label>
                        <div class="field-input">
                          <input type="text" name="firstName" required />
                          <div class="error-message">First name is required</div>
                        </div>
                      </div>
                      <div class="col-lg-6 col-md-6 col-sm-12 form-group">
                        <label>Last Name*</label>
                        <div class="field-input">
                          <input type="text" name="lastName" required />
                          <div class="error-message">Last name is required</div>
                        </div>
                      </div>
                      <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                        <label>Email Address*</label>
                        <div class="field-input">
                          <input type="email" name="email" required />
                          <div class="error-message">Please enter a valid email address</div>
                        </div>
                      </div>
                      <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                        <label>Phone Number*</label>
                        <div class="field-input">
                          <input type="tel" name="phone" required />
                          <div class="error-message">Phone number must start with 01 and be 11 digits long</div>
                        </div>
                      </div>
                      <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                        <label>Street Address*</label>
                        <div class="field-input">
                          <input
                            type="text"
                            name="street"
                            placeholder="Street address"
                            required
                          />
                          <div class="error-message">Street address is required</div>
                        </div>
                      </div>
                      <div class="col-lg-6 col-md-6 col-sm-12 form-group">
                        <label>City*</label>
                        <div class="field-input">
                          <input type="text" name="city" required />
                          <div class="error-message">City is required</div>
                        </div>
                      </div>
                      <div class="col-lg-6 col-md-6 col-sm-12 form-group">
                        <label>Postal Code*</label>
                        <div class="field-input">
                          <input type="text" name="postCode" pattern="[0-9]{6}" maxlength="6" inputmode="numeric" required />
                          <div class="error-message">Postal code must be 6 digits</div>
                        </div>
                      </div>
                      <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                        <label>Governorate*</label>
                        <div class="field-input">
                          <select class="selectmenu" name="governorate" required>
                            <option value="">Select Governorate</option>
                            <option value="Cairo">Cairo</option>
                            <option value="Alexandria">Alexandria</option>
                            <option value="Ismailia">Ismailia</option>
                            <option value="Luxor">Luxor</option>
                            <option value="Giza">Giza</option>
                            <option value="Aswan">Aswan</option>
                          </select>
                          <div class="error-message">Please select a governorate</div>
                        </div>
                      </div>
                    </div>
                  </form>
                </div>

                <div class="payment-info">
                  <h4 class="sub-title">Payment Method</h4>
                  <div class="payment-inner">
                    <div class="option-block">
                      <div class="custom-controls-stacked">
                        <label class="custom-control material-checkbox">
                          <input
                            type="radio"
                            name="payment_method"
                            value="cash"
                            class="material-control-input"
                          />
                          <span class="material-control-indicator"></span>
                          <span class="description">Cash on Delivery</span>
                        </label>
                      </div>
                      <p>
                        Pay with cash when your order is delivered to your
                        doorstep. Additional delivery charges may apply.
                      </p>
                    </div>

                    <div class="option-block">
                      <div class="custom-controls-stacked">
                        <label class="custom-control material-checkbox">
                          <input
                            type="radio"
                            name="payment_method"
                            value="card"
                            class="material-control-input"
                          />
                          <span class="material-control-indicator"></span>
                          <span class="description">Credit/Debit Card</span>
                        </label>
                      </div>
                    </div>

                    

                    <div class="btn-box">
                      <button
                        type="submit"
                        form="checkout-form"
                        class="theme-btn-one"
                      >
                        Place Your Order
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="col-lg-4 col-md-12 col-sm-12">
              <div class="order-summary">
                <h4 class="sub-title">Order Summary</h4>
                <div class="order-items">
                  <ul id="orderItemsList" class="order-items-list">
                    <!-- Cart items will be dynamically added here -->
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>
    <%- include("partials/footer")%>
    <%- include("partials/scripts")%>
    <script>
      // Expose logged-in user id to checkout.js
      window.currentUserId = "<%= user ? user._id : '' %>";
    </script>
    <%- include('partials/chatbot') %>

    <script>
      // Handle checkout logic with server-side cart
      document.addEventListener("DOMContentLoaded", async function () {
        const user = JSON.parse('<%- JSON.stringify(user || null) %>');

        if (!user) {
          window.location.href = '/login?redirect=checkout';
          return;
        }

        const orderItemsList = document.getElementById('orderItemsList');

        // Fetch cart from server
        let serverCart;
        try {
          const res = await fetch(`/api/v1/cart/${user._id}`, { credentials: 'include' });
          if (!res.ok) throw new Error('Failed to fetch cart');
          serverCart = await res.json();
        } catch (err) {
          console.error(err);
          window.location.href = '/';
          return;
        }

        if (!serverCart.items || serverCart.items.length === 0) {
          window.location.href = '/';
          return;
        }

        let subtotal = 0;

        // Display cart items
        serverCart.items.forEach(ci => {
          const itemTotal = ci.price * ci.quantity;
          subtotal += itemTotal;

          const li = document.createElement('li');
          li.innerHTML = `
            <div class="single-box clearfix">
              <img src="${ci.imageUrl}" alt="${ci.productName}" />
              <h6>${ci.productName} (${ci.priceType === 'whole' ? 'Whole' : 'Piece'}) x ${ci.quantity}</h6>
              <span>EGP${itemTotal.toFixed(2)}</span>
            </div>
          `;
          orderItemsList.appendChild(li);
        });

        // Add subtotal and shipping
        const shipping = 59.99;
        const total = subtotal + shipping;

        // Add totals to the list
        orderItemsList.innerHTML += `
          <li class="sub-total clearfix">
            <h6>Sub Total</h6>
            <span>EGP${subtotal.toFixed(2)}</span>
          </li>
          <li class="shipping clearfix">
            <h6>Shipping</h6>
            <span>EGP${shipping.toFixed(2)}</span>
          </li>
          <li class="order-total clearfix">
            <h6>Order Total</h6>
            <span>EGP${total.toFixed(2)}</span>
          </li>
        `;

        // Form validation functions
        function validateField(field, value) {
          const fieldInput = field.closest('.field-input');
          let isValid = true;
          let errorMessage = '';

          switch(field.name) {
            case 'firstName':
            case 'lastName':
            case 'city':
            case 'street':
              isValid = value.trim() !== '';
              errorMessage = `${field.name.charAt(0).toUpperCase() + field.name.slice(1)} is required`;
              break;
            case 'email':
              const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
              isValid = emailRegex.test(value);
              errorMessage = 'Please enter a valid email address';
              break;
            case 'phone':
              const phoneRegex = /^01[0125][0-9]{8}$/;
              isValid = phoneRegex.test(value);
              errorMessage = 'Phone number must start with 01 and be 11 digits long';
              break;
            case 'governorate':
              isValid = value !== '';
              errorMessage = 'Please select a governorate';
              break;
            case 'postCode':
              const postCodeRegex = /^\d{6}$/;
              isValid = postCodeRegex.test(value);
              errorMessage = 'Postal code must be 6 digits';
              break;
          }

          if (!isValid) {
            fieldInput.classList.add('error');
            fieldInput.querySelector('.error-message').textContent = errorMessage;
          } else {
            fieldInput.classList.remove('error');
          }

          return isValid;
        }

        function clearErrors() {
          document.querySelectorAll('.field-input').forEach(input => {
            input.classList.remove('error');
          });
        }

        function validateForm() {
          let isValid = true;
          const form = document.getElementById('checkout-form');
          const requiredFields = form.querySelectorAll('input[required], select[required]');
          
          requiredFields.forEach(field => {
            if (!validateField(field, field.value)) {
              isValid = false;
            }
          });

          // Check if payment method is selected
          const paymentMethod = document.querySelector('input[name="payment_method"]:checked');
          if (!paymentMethod) {
            alert('Please select a payment method');
            isValid = false;
          }

          return isValid;
        }

        // Form submission handler
        document.getElementById('checkout-form').addEventListener('submit', async function(e) {
          e.preventDefault();
          
          // Clear previous error states
          clearErrors();
          
          // Validate form
          if (!validateForm()) {
            return;
          }

          const formData = {
            shippingInfo: {
              firstName: document.querySelector('input[name="firstName"]').value,
              lastName: document.querySelector('input[name="lastName"]').value,
              email: document.querySelector('input[name="email"]').value,
              phone: document.querySelector('input[name="phone"]').value,
              address: {
                street: document.querySelector('input[name="street"]').value,
                city: document.querySelector('input[name="city"]').value,
                postCode: document.querySelector('input[name="postCode"]').value,
                governorate: document.querySelector('select[name="governorate"]').value
              }
            },
            paymentMethod: document.querySelector('input[name="payment_method"]:checked').value
          };

          try {
            const response = await fetch(`/api/v1/orders/${user._id}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(formData)
            });

            const data = await response.json();

            if (!response.ok) {
              throw new Error(data.error || 'Failed to place order');
            }

            if (formData.paymentMethod === 'card') {
              // Open payment URL in new tab (card payments)
              window.open(data.paymentUrl, '_blank');
            }

            // Immediately redirect to success page (cash or after card)
            window.location.href = `/order-success?orderNumber=${data.order.orderNumber}&amount=${data.order.amount}&paymentMethod=${data.order.paymentMethod}`;
          } catch (error) {
            alert(error.message || 'An error occurred while placing your order');
          }
        });
      });
    </script>
    <script src="/js/checkout.js"></script>
    
     
  </body>
</html>
